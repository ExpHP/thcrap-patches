binhacks:
  /fields-if(th08):
    ExpHP.sprite-death-fix.hack:
      addr: "0x462f19"
      expected: "8b75088b45fc"
      call-codecave:
        - "E8[codecave:ExpHP.sprite-death-fix.fix]" # call fix
        # original code
        - "8B7508            " # mov  esi, dword [ebp+0x8]
        - "8B45FC            " # mov  eax, dword [ebp-0x4]
        - "C3                " # ret

  # Bizarre ABI era games, for which we can miraculously write a single binhack.
  /fields-if(any(th10..th13)):
    ExpHP.sprite-death-fix.hack:
      addr:
        /value-if(th10):  "0x442fe4"
        /value-if(th11):  "0x44fda4"
        /value-if(th12):  "0x45a4a4"
        /value-if(th125): "0x458fb4"
        /value-if(th128): "0x45f043"
        /value-if(th13):  "0x467a83"
      expected:
        /value-if(th10):  "8bb8ccda7200"
        /value-if(th11):  "8bb824567b00"
        /value-if(th12):  "8bb8a4568300"
        /value-if(th125): "8bb8acd68300"
        /value-if(th128): "8bb8f0968600"
        /value-if(th13):  "8bb8f481ef00"
      call-codecave:
        - "52                " # push edx  ; save
        - "E8[codecave:ExpHP.sprite-death-fix.fix]" # call fix
        # need anm manager in eax, write cursor in edi, arg in edx
        - "BA<codecave:ExpHP.sprite-death-fix.data>" # mov  edx, data
        - "8B02              " # mov  eax, [edx+Data.anm_manager_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8B7A10            " # mov  edi, dword [edx+Data.cursor_offset]
        - "8B3C07            " # mov  edi, [edi+eax]
        - "5A                " # pop  edx
        - "C3                " # ret

  /fields-if(th14..th17):
    ExpHP.sprite-death-fix.hack:
      addr:
        /value-if(th14):  "0x475f90"
        /value-if(th143): "0x47a9a0"
        /value-if(th15):  "0x47e4d0"
        /value-if(th16):  "0x465b60"
        /value-if(th165): "0x46bf90"
        /value-if(th17):  "0x46d180"
      expected: "8d87a8000000"
      codecave:
        - "E8[codecave:ExpHP.sprite-death-fix.fix]" # call fix
        - "8B3E              " # mov  edi, [esi]
        - /item-if(th14):  "E800000000C70424A65F4700C3" # abs_jmp_hack 0x475fa6  ; TH14
        - /item-if(th143): "E800000000C70424B6A94700C3" # abs_jmp_hack 0x47a9b6  ; TH143
        - /item-if(th15):  "E800000000C70424E6E44700C3" # abs_jmp_hack 0x47e4e6  ; TH15
        - /item-if(th16):  "E800000000C70424765B4600C3" # abs_jmp_hack 0x465b76  ; TH16
        - /item-if(th165): "E800000000C70424A6BF4600C3" # abs_jmp_hack 0x46bfa6  ; TH165
        - /item-if(th17):  "E800000000C7042496D14600C3" # abs_jmp_hack 0x46d196  ; TH17

codecaves:
  ExpHP.sprite-death-fix.data:
    /value-if(th08):
      - "90DC8B01          " # at Data.anm_manager_ptr, dd 0x18bdc90
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "402E4600          " # at Data.flush_sprites, dd  0x462e40
      - "24250000          " # at Data.buffer_offset, dd 0x2524
      - "24252A00          " # at Data.cursor_offset, dd 0x2a2524

    /value-if(th10):
      - "101C4900          " # at Data.anm_manager_ptr, dd 0x491c10
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "502F4400          " # at Data.flush_sprites, dd 0x442f50
      - "CCDA3A00          " # at Data.buffer_offset, dd 0x3adacc
      - "CCDA7200          " # at Data.cursor_offset, dd 0x72dacc

    /value-if(th11):
      - "68324C00          " # at Data.anm_manager_ptr, dd 0x4c3268
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "10FD4400          " # at Data.flush_sprites, dd  0x44fd10
      - "24564300          " # at Data.buffer_offset, dd 0x435624
      - "24567B00          " # at Data.cursor_offset, dd 0x7b5624

    /value-if(th12):
      - "CCE84C00          " # at Data.anm_manager_ptr, dd 0x4ce8cc
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "C0A34500          " # at Data.flush_sprites, dd 0x45a3c0
      - "A4564B00          " # at Data.buffer_offset, dd 0x4b56a4
      - "A4568300          " # at Data.cursor_offset, dd 0x8356a4

    /value-if(th125):
      - "B40C4D00          " # at Data.anm_manager_ptr, dd 0x4d0cb4
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "D08E4500          " # at Data.flush_sprites, dd 0x458ed0
      - "ACD64B00          " # at Data.buffer_offset, dd 0x4bd6ac
      - "ACD68300          " # at Data.cursor_offset, dd 0x83d6ac

    /value-if(th128):
      - "502E4D00          " # at Data.anm_manager_ptr, dd 0x4d2e50
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "60EF4500          " # at Data.flush_sprites, dd 0x45ef60
      - "F0964E00          " # at Data.buffer_offset, dd 0x4e96f0
      - "F0968600          " # at Data.cursor_offset, dd 0x8696f0

    /value-if(th13):
      - "88C64D00          " # at Data.anm_manager_ptr, dd 0x4dc688
      - "<codecave:ExpHP.sprite-death-fix.wrapper-esi>" # at Data.flush_sprites_abi, dd wrapper_esi
      - "A0794600          " # at Data.flush_sprites, dd 0x4679a0
      - "F481B700          " # at Data.buffer_offset, dd 0xb781f4
      - "F481EF00          " # at Data.cursor_offset, dd 0xef81f4

    /value-if(th14):
      - "CC564F00          " # at Data.anm_manager_ptr, dd 0x4f56cc
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "B05E4700          " # at Data.flush_sprites, dd 0x475eb0
      - "F481BC00          " # at Data.buffer_offset, dd 0xbc81f4
      - "F481F400          " # at Data.cursor_offset, dd 0xf481f4

    /value-if(th143):
      - "E88D5300          " # at Data.anm_manager_ptr, dd 0x538de8
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "C0A84700          " # at Data.flush_sprites, dd 0x47a8c0
      - "0482BC00          " # at Data.buffer_offset, dd 0xbc8204
      - "0482F400          " # at Data.cursor_offset, dd 0xf48204

    /value-if(th15):
      - "183C5000          " # at Data.anm_manager_ptr, dd 0x503c18
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "F0E34700          " # at Data.flush_sprites, dd 0x47e3f0
      - "0CFC8701          " # at Data.buffer_offset, dd 0x187fc0c
      - "0CFCBF01          " # at Data.cursor_offset, dd 0x1bffc0c

    /value-if(th16):
      - "480F4C00          " # at Data.anm_manager_ptr, dd 0x4c0f48
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "805A4600          " # at Data.flush_sprites, dd 0x465a80
      - "1CFC8401          " # at Data.buffer_offset, dd 0x184fc1c
      - "1CFCBC01          " # at Data.cursor_offset, dd 0x1bcfc1c

    /value-if(th165):
      - "8CD84E00          " # at Data.anm_manager_ptr, dd 0x4ed88c
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "B0BE4600          " # at Data.flush_sprites, dd 0x46beb0
      - "20FC8401          " # at Data.buffer_offset, dd 0x184fc20
      - "20FCBC01          " # at Data.cursor_offset, dd 0x1bcfc20

    /value-if(th17):
      - "209A5000          " # at Data.anm_manager_ptr, dd 0x509a20
      - "<codecave:ExpHP.sprite-death-fix.wrapper-thiscall>" # at Data.flush_sprites_abi, dd wrapper_thiscall
      - "A0D04600          " # at Data.flush_sprites, dd 0x46d0a0
      - "30088601          " # at Data.buffer_offset, dd 0x1860830
      - "3008BE01          " # at Data.cursor_offset, dd 0x1be0830

  # Calls a 1-arg function with 'thiscall' convention.
  # __stdcall WrapperThiscall(func, arg)
  ExpHP.sprite-death-fix.wrapper-thiscall:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "8B4D0C            " # mov  ecx, [ebp+0x0c]
    - "FF5508            " # call [ebp+0x8]
    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C20800            " # ret 0x8

  # Calls a function that takes an arg in esi.
  # __stdcall WrapperEsi(func, arg)
  ExpHP.sprite-death-fix.wrapper-esi:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "8B750C            " # mov  esi, [ebp+0x0c]
    - "FF5508            " # call [ebp+0x8]
    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C20800            " # ret 0x8

  # __stdcall Fix()
  ExpHP.sprite-death-fix.fix:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "BF<codecave:ExpHP.sprite-death-fix.data>" # mov  edi, data
    - "8B37              " # mov  esi, [edi+Data.anm_manager_ptr]
    - "8B36              " # mov  esi, [esi]

    # Check if there is enough room for one more sprite.
    - "8B4710            " # mov  eax, [edi+Data.cursor_offset]
    - "8D0C06            " # lea  ecx, [esi+eax]  ; location of write ptr is also end of array
    - "8B01              " # mov  eax, [ecx]  ; write ptr
    - "8D80A8000000      " # lea  eax, [eax+0xa8]  ; amount of data written for one sprite
    - "39C8              " # cmp  eax, ecx  ; compare to end of array
    - "7C17              " # jl   .noreset

    # Not enough room? Flush anything not yet drawn...
    - "56                " # push esi
    - "FF7708            " # push dword [edi+Data.flush_sprites]
    - "FF5704            " # call [edi+Data.flush_sprites_abi]

    # ...and go back to the beginning of the buffer.
    - "8B470C            " # mov  eax, [edi+Data.buffer_offset]
    - "8D0406            " # lea  eax, [esi+eax]
    - "8B4F10            " # mov  ecx, [edi+Data.cursor_offset]
    - "89040E            " # mov  [esi+ecx+0x0], eax  ; write cursor
    - "89440E04          " # mov  [esi+ecx+0x4], eax  ; read cursor

    # .noreset:
    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C3                " # ret
