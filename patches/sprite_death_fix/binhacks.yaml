binhacks:
  /fields-if(th10):
    ExpHP.sprite-death-fix.hack:
      addr: "0x442fe4"
      expected: "8bb8ccda7200"
      codecave:
        # Later games have this check but TH10 doesn't
        - "52                " # push edx  ; save (it's an argument to the current function)
        - "8B35101C4900      " # mov  esi, [ANM_MANAGER_PTR_10]
        - "8DB8CCDA7200      " # lea  edi, [eax+CURSOR_OFFSET_10]  ; write ptr
        - "8B07              " # mov  eax, [edi]
        - "05A8000000        " # add  eax, 0xa8
        - "39F8              " # cmp  eax, edi
        - "7C19              " # jl   .noreset

        # requires ANM_MANAGER in esi
        - "B8502F4400        " # mov  eax, FLUSH_SPRITES_10
        - "FFD0              " # call eax
        - "8D86CCDA3A00      " # lea  eax, [esi+BUFFER_OFFSET_10]
        - "8986CCDA7200      " # mov  [esi+CURSOR_OFFSET_10+0x0], eax  ; write cursor
        - "8986D0DA7200      " # mov  [esi+CURSOR_OFFSET_10+0x4], eax  ; read cursor

        # .noreset:
        - "5A                " # pop  edx
        # original code
        - "A1101C4900        " # mov  eax, [ANM_MANAGER_PTR_10]
        - "8BB8CCDA7200      " # mov  edi, dword [eax+CURSOR_OFFSET_10]

        # abs_jmp_hack 0x442fea
        - "E800000000        " # call %%next
        - "C70424EA2F4400    " # mov dword [esp], %1
        - "C3                " # ret

  /fields-if(th11):
    ExpHP.sprite-death-fix.hack:
      addr: "0x44fda4"
      expected: "8bb824567b00"
      codecave:
        # Games prior to DDC are missing this bounds check
        - "52                " # push edx  ; save (it's an argument to the current function)
        - "8B3568324C00      " # mov  esi, [ANM_MANAGER_PTR_11]
        - "8DB824567B00      " # lea  edi, [eax+CURSOR_OFFSET_11]  ; write ptr
        - "8B07              " # mov  eax, [edi]
        - "05A8000000        " # add  eax, 0xa8
        - "39F8              " # cmp  eax, edi
        - "7C19              " # jl   .noreset

        # requires ANM_MANAGER in esi
        - "B810FD4400        " # mov  eax, FLUSH_SPRITES_11
        - "FFD0              " # call eax
        - "8D8624564300      " # lea  eax, [esi+BUFFER_OFFSET_11]
        - "898624567B00      " # mov  [esi+CURSOR_OFFSET_11+0x0], eax  ; write cursor
        - "898628567B00      " # mov  [esi+CURSOR_OFFSET_11+0x4], eax  ; read cursor

        # .noreset:
        - "5A                " # pop  edx
        # original code
        - "A168324C00        " # mov  eax, [ANM_MANAGER_PTR_11]
        - "8BB824567B00      " # mov  edi, dword [eax+CURSOR_OFFSET_11]

        # abs_jmp_hack 0x44fdaa
        - "E800000000        " # call %%next
        - "C70424AAFD4400    " # mov dword [esp], %1
        - "C3                " # ret

  /fields-if(th12):
    ExpHP.sprite-death-fix.hack:
      addr: "0x45a4a4"
      expected: "8bb8a4568300"
      codecave:
        # Games prior to DDC are missing this bounds check
        - "52                " # push edx  ; save (it's an argument to the current function)
        - "8B35CCE84C00      " # mov  esi, [ANM_MANAGER_PTR_12]
        - "8DB8A4568300      " # lea  edi, [eax+CURSOR_OFFSET_12]  ; write ptr
        - "8B07              " # mov  eax, [edi]
        - "05A8000000        " # add  eax, 0xa8
        - "39F8              " # cmp  eax, edi
        - "7C19              " # jl   .noreset

        # requires ANM_MANAGER in esi
        - "B8C0A34500        " # mov  eax, FLUSH_SPRITES_12
        - "FFD0              " # call eax
        - "8D86A4564B00      " # lea  eax, [esi+BUFFER_OFFSET_12]
        - "8986A4568300      " # mov  [esi+CURSOR_OFFSET_12+0x0], eax  ; write cursor
        - "8986A8568300      " # mov  [esi+CURSOR_OFFSET_12+0x4], eax  ; read cursor

        # .noreset:
        - "5A                " # pop  edx
        # original code
        - "A1CCE84C00        " # mov  eax, [ANM_MANAGER_PTR_12]
        - "8BB8A4568300      " # mov  edi, dword [eax+CURSOR_OFFSET_12]

        # abs_jmp_hack 0x45a4aa
        - "E800000000        " # call %%next
        - "C70424AAA44500    " # mov dword [esp], %1
        - "C3                " # ret
