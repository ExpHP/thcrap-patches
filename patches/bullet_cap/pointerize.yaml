# pointerize.yaml - Binhacks dedicated to the pointer-ification of embedded static arrays in early games.

codecaves:
  /fields-if(th08):
    ExpHP.bullet-cap.pointerize-data:
      - "10F7F600          " # at PointerizeData.bullet_array_ptr, dd 0xf54e90 + 0x1a880
      - "C8575B01          " # at PointerizeData.laser_array_ptr, dd 0xf54e90 + 0x660938
      - "48366501          " # at PointerizeData.item_array_ptr, dd 0x1653648
      - "B8100000          " # at PointerizeData.bullet_size, dd 0x10b8
      - "9C050000          " # at PointerizeData.laser_size, dd 0x59c
      - "E4020000          " # at PointerizeData.item_size, dd 0x2e4
      - "904EF500          " # at PointerizeData.bullet_mgr_base, dd 0xf54e90
      - "78A56B00          " # at PointerizeData.bullet_mgr_size, dd 0x6ba578
      - "06000000          " # at PointerizeData.bullet_state_dummy_value, dd 6
      - "B80D0000          " # at PointerizeData.bullet_state_offset, dd 0xdb8
      - "D4434A00          " # at PointerizeData.func_malloc, dd 0x4a43d4

binhacks:
  /fields-if(th08):
    # Uncomment this to give yourself a chance to attach CE if you need to debug a crash in life before main.
    # ExpHP.bullet-cap.loop:
    #   addr: "0x4a619e"
    #   expected: "6a60"  # push 60
    #   code: "EBFE"

    # BulletManager::reset requires us to have done our search and replace work already,
    # and there's no reason to be calling it in life before main anyways.  Nop this call out.
    ExpHP.bullet-cap.dont-reset-before-main:
      addr: "0x42f489"
      code: "9090909090"

    ExpHP.bullet-cap.pointerize-bullets-constructor:
      addr: "0x42f43c"  # (in BulletManager::constructor (life before main))
      expected: "6800f54200"
      codecave:
        - "E8[codecave:ExpHP.bullet-cap.allocate-pointerized-bmgr-arrays]" # call allocate_pointerized_bmgr_arrays
        - "E800000000C7042478F44200C3" # abs_jmp_hack 0x42f478

    ExpHP.bullet-cap.pointerize-keep-the-pointers:
      addr: "0x42f36a"
      expected: "b95ee91a00"
      codecave:
        - "E8[codecave:ExpHP.bullet-cap.clear-pointerized-bullet-mgr]" # call clear_pointerized_bullet_mgr
        - "E800000000C7042476F34200C3" # abs_jmp_hack 0x42f376

    ExpHP.bullet-cap.pointerize-bullets-static-0c:
      addr:
        - "0x423a6c"  # (in a funcSet/funcCall func)
        - "0x423e2c"  # (in a funcSet/funcCall func)
        - "0x4241ec"  # (in a funcSet/funcCall func)
        - "0x42529c"  # (in a funcSet/funcCall func)
      expected: "c745f410f7f600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8945F4            " # mov  dword [ebp-0x0c], eax
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-static-08:
      addr:
        - "0x424a2c"  # (in a funcSet/funcCall func)
        - "0x424c4c"  # (in a funcSet/funcCall func)
        - "0x424e5c"  # (in a funcSet/funcCall func)
        - "0x4250dc"  # (in a funcSet/funcCall func)
        - "0x4251e6"  # (in a funcSet/funcCall func)
        - "0x42f3a0"  # (in BulletManager::reset_bullet_array)
      expected: "c745f810f7f600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8945F8            " # mov  dword [ebp-0x08], eax
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-static-1c:
      addr: "0x43083a"  # (in some cancel func)
      expected: "c745e410f7f600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8945E4            " # mov  dword [ebp-0x1c], eax
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-static-18:
      addr: "0x430abe"  # (in another cancel func)
      expected: "c745e810f7f600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8945E8            " # mov  dword [ebp-0x18], eax
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-static-14:
      addr: "0x430d3a"  # (in yet another cancel func)
      expected: "c745ec10f7f600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "8945EC            " # mov  dword [ebp-0x14], eax
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-offset-eax:
      addr:
        - "0x42f379"  # (in BulletManager::reset_bullet_array)
        - "0x431254"  # (in BulletManager::on_tick)
      expected: "0580a80100"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B00              " # mov  eax, [eax+PointerizeData.bullet_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-bullets-offset-edx:
      addr:
        - "0x42f657"  # (in BulletManager::shoot_one_bullet)
        - "0x42fe23"  # (in BulletManager::shoot_one_bullet)
      expected: "81c280a80100"
      call-codecave:
        - "BA<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  edx, pointerize_data
        - "8B12              " # mov  edx, [edx+PointerizeData.bullet_array_ptr]
        - "8B12              " # mov  edx, [edx]
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-lasers-offset-edx:
      addr:
        - "0x42f46c"  # (in BulletManager::constructor)
        - "0x430941"  # (in a cancel func)
      expected: "81c238096600"
      call-codecave:
        - "BA<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  edx, pointerize_data
        - "8B5204            " # mov  edx, [edx+PointerizeData.laser_array_ptr]
        - "8B12              " # mov  edx, [edx]
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-lasers-offset-eax:
      addr:
        - "0x430bcb"  # (in another cancel func)
        - "0x430f2c"  # (in BulletManager::shoot_lasers)
        - "0x431b75"  # (in BulletManager::on_tick)
      expected: "0538096600"
      call-codecave:
        - "B8<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  eax, pointerize_data
        - "8B4004            " # mov  eax, [eax+PointerizeData.laser_array_ptr]
        - "8B00              " # mov  eax, [eax]
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-lasers-offset-ecx:
      addr: "0x432b7b"  # (in BulletManager::on_draw)
      expected: "81c138096600"
      call-codecave:
        - "B9<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  ecx, pointerize_data
        - "8B4904            " # mov  ecx, [ecx+PointerizeData.laser_array_ptr]
        - "8B09              " # mov  ecx, [ecx]
        - "C3                " # ret

    ExpHP.bullet-cap.pointerize-items-constructor:
      addr: "0x440021"
      expected: "68e4020000"
      codecave:
        # The line before this pushed the cancel cap + 1 (and we couldn't replace
        # it because bullet_cap promises to preserve and replace such values).
        #
        # However we can't use it because this runs before our search and
        # replace code, so just ignore it.
        - "83C404            " # add  esp, 0x4
        - "E8[codecave:ExpHP.bullet-cap.allocate-pointerized-imgr-arrays]" # call allocate_pointerized_imgr_arrays
        - "E800000000C704242F004400C3" # abs_jmp_hack 0x44002f

    ExpHP.bullet-cap.pointerize-items-keep-the-pointer:
      addr: "0x4337ff"
      expected: "8b7dfcf3ab"
      codecave:
        # avoid zeroing out the pointer during this memcpy
        - "BF<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  edi, pointerize_data
        - "8B7F08            " # mov  edi, [edi+PointerizeData.item_array_ptr]
        - "FF37              " # push dword [edi]
        - "8B7DFC            " # mov  edi, [ebp-0x4]  ; original code
        - "F3AB              " # rep stosd            ; original code
        - "BF<codecave:ExpHP.bullet-cap.pointerize-data>" # mov  edi, pointerize_data
        - "8B7F08            " # mov  edi, [edi+PointerizeData.item_array_ptr]
        - "8F07              " # pop  dword [edi]
        - "E800000000C7042404384300C3" # abs_jmp_hack 0x433804

    ExpHP.bullet-cap.pointerize-items-spawn:
      addr: "0x4400b8"
      expected: "8b55f403d1"
      codecave:
        - "8B55F4            " # mov  edx, [ebp-0xc]
        - "8B12              " # mov  edx, [edx]  ; follow pointer
        - "01CA              " # add  edx, ecx
        - "E800000000C70424 bd004400 C3" # jump to 0x4400bd

    ExpHP.bullet-cap.pointerize-items-spawn-wrap:
      addr: "0x440196"
      expected: "8b4df4894df8"
      codecave:
        - "8B4DF4            " # mov  ecx, [ebp-0xc]
        - "8B09              " # mov  ecx, [ecx]   ; added instruction
        - "894DF8            " # mov  [ebp-0x8], ecx
        - "E800000000C70424 aa014400 C3" # jump to 0x4401aa
